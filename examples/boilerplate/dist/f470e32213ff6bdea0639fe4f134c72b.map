{"version":3,"sources":["../../src/radi-router.js","../../src/index.js","pages/index.js","pages/foo.js","routes/index.js","app.js","index.js"],"names":["r","component","use","version","STRIP_COMMENTS","FIND_L","RL","charCodeAt","RR","HASH","DOT","TAGNAME","ID","CLASSNAME","frozenState","isArray","o","Array","arg","Object","prototype","toString","call","clone","obj","i","ret","ret2","len","length","hasOwnProperty","parseQuery","query","tag","id","className","mode","buffer","char","isHash","isDot","isEnd","createElement","ns","ref","element","document","createElementNS","setAttribute","arrayMods","v","s","__radi","defineProperties","value","reverse","bind","push","splice","pop","shift","ids","activeComponents","Radi","SELF","__path","populate","to","path","defineProperty","ii","getOwnPropertyDescriptor","set","watcher","concat","$e","emit","enumerable","WATCH","get","on","fn","list","targ","prop","oldval","setter","newval","constructor","String","apply","arguments","configurable","state","Error","props","isWatchable","parent","e","a","actions","$id","$name","name","$state","$props","$actions","$html","createDocumentFragment","$parent","$view","Function","ll","cond","$render","mount","appendChild","$link","destroy","oldRootElem","parentElement","newRootElem","cloneNode","parentNode","insertBefore","unmount","removeChild","onMount","onDestroy","unmountAll","el","children","mountAll","radiMutate","c","setStyle","view","arg1","arg2","self","getEl","cache","style","undefined","isString","key","setAttr","source","isFunction","temp","z","ensureEl","html","nodeType","isNumber","isNode","NW","isCondition","Condition","isComponent","text","str","createTextNode","radiArgs","args","__do","watch","b","replaceChild","textContent","htmlCache","memoizeHTML","extend","replace","match","exec","cursor","n","index","all","input","_l","_r","found","substr","m","obs","split","last","join","newString","Component","p","k","console","warn","comp","where","getElementById","out","emptyNode","data","act","link","fragment","toplink","lastChild","w","start","nextSibling","Math","abs","templink","previousSibling","linkNum","txt","t","f","trim","cases","els","cb","elseif","else","l","freeze","unfreeze","pack","window","$Radi","plugin","require","newname","rename","routes","_router","Router","main","module","exports","app","hot","accept","dispose"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEv1BD;eACkCI,QAAQ,uBAAR;IAA1BvO,aAAAA;IAAGgO,aAAAA;IAAG/N,qBAAAA;IAAWgH,gBAAAA;;AAEzB,IAAMuB,OAAO,SAAPA,IAAO,GAAY;AACvB,MAAIjC,OAAOyH,EAAE,KAAKzH,IAAP,CAAX;;AAEA,SACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,GADF;AAKD,CARD;;kBAUetG,UAAU;AACvBsG,QAAM,KADiB;AAEvBiC,QAAMA;AAFibf;;;;AACA;;;;;;kBAEe;AAAA,SAAO;AACpBkG,YAAQ;AACN,0BADM;AAEN;AAFM;AAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfof;eACkCH,QAAQ,uBAAR;IAA1BvO,aAAAA;IAAGgO,aAAAA;IAAG/N,qBAAAA;IAAWgH,gBAAAA;;AAEzB,IAAMpB,QAAQ;AACZU,QAAM,QADM;AAEZiI,WAAS;AAFG,CAAd;;AAKA,IAAMpI,UAAU;AACd2B,SADc,qBACJ;AACR;AACD,GAHa;AAId0G,QAJc,kBAIPlI,IAJO,EAID;AACX,SAAKA,IAAL,GAAYA,IAAZ;AACD;AANa,CAAhB;;AASA,IAAMiC,OAAO,SAAPA,IAAO,GAAY;AAAA;;AACvB,MAAIjC,OAAOyH,EAAE,KAAKzH,IAAP,CAAX;;AAEA,SACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAMyH,QAAEzH,IAAF;AAAN,KADF;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAEE,mBAAO,MAAK,MAAZ,EAAmB,OAAQyH,EAAE,KAAKQ,OAAP,CAA3B;AAFF,KAFF;AAME;AAAA;AAAA,QAAQ,SAAU,mBAAM;AAAE,gBAAKC,MAAL,CAAY,MAAKD,OAAjB;AAA2B,SAArD;AAAA;AAAA;AANF,GADF;AAUD,CAbD;;kBAeevO,UAAU;AACvBsG,QAAM,OADiB;AAEvBiC,QAAMA,IAFiB;AAGvB3C,SAAOA,KAHgB;AAIvBO,WAASA;AAJcf;;;;;;eAFqBmI,QAAQ,oBAAR;IAAbpH,iBAAAA;IAAOnH,aAAAA;;AAIf,IAAIgP,MAAM7H,MAAM,mBAAN,EAAkB,KAAlB,CAAV;;AAEA,IAAI2H,OAAOG,GAAX,EAAgB;AACdH,SAAOG,GAAP,CAAWC,MAAX;AACAJ,SAAOG,GAAP,CAAWE,OAAX,CAAmB,YAAM;AACvB;AACAH,QAAI1H,OAAJ;AACD,GAHD;AAID","file":"f470e32213ff6bdea0639fe4f134c72b.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.router = {})));\n}(this, (function (exports) { 'use strict';\n  var radi\n  // if (typeof radi === 'undefined') { console.warn('[Radi.js Router] Err: Radi.js package not found'); return false; }\n\n\tconst COLON = ':'.charCodeAt(0)\n  var cr, crg, lr, ld\n\n\tvar parseRoute = function parseRoute(route) {\n\t\tvar parts = route.split('/'), end = [], p = []\n\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\tif (COLON === parts[i].charCodeAt(0)) {\n\t\t\t\tend.push('([^\\/]+?)')\n\t\t\t\tp.push(parts[i].substr(1))\n\t\t\t} else if (parts[i] !== '') {\n\t\t\t\tend.push(parts[i])\n\t\t\t}\n\t\t}\n\t\treturn [new RegExp('^/' + end.join('/') + '(?:\\/(?=$))?$', 'i'), p]\n\t}\n\n\tvar parseAllRoutes = function parseAllRoutes(arr) {\n\t\tvar len = arr.length, ret = new Array(len)\n\t\tfor (var i = len - 1; i >= 0; i--) {\n\t\t\tret[i] = parseRoute(arr[i])\n\t\t}\n\t\treturn ret\n\t}\n\n\tclass Route {\n\t\tconstructor(curr, match, routes, key) {\n\t\t\tvar m = curr.match(match[0])\n\t\t\tthis.path = curr\n\t\t\tthis.key = key\n\t\t\tthis.params = {}\n\t\t\tfor (var i = 0; i < match[1].length; i++) {\n\t\t\t\tthis.params[match[1][i]] = m[i + 1]\n\t\t\t}\n\t\t\tthis.cmp = routes[key]\n\t\t}\n\t}\n\n  function router(src) {\n    radi = src\n    return function(ro) {\n  \t  function getRoute(curr) {\n    \t\tif (lr === curr) return ld\n    \t\tif (!cr) cr = Object.keys(ro.routes)\n    \t\tif (!crg) crg = parseAllRoutes(cr)\n\n    \t\tfor (var i = 0; i < crg.length; i++) {\n    \t\t\tif (crg[i][0].test(curr)) {\n    \t\t\t\tld = new Route(curr, crg[i], ro.routes, cr[i])\n    \t\t\t\tbreak\n    \t\t\t}\n    \t\t}\n    \t\treturn ld\n    \t}\n\n      window.r_routes = ro.routes\n      window.r_before = ro.beforeEach || true\n      window.r_after = ro.afterEach || null\n\n      var conds = ''\n      for (var route in ro.routes) {\n        conds = conds.concat(`cond(\n          l(this.active === '${route}' && (r_before === true || r_before('${route}',2))),\n          function () { var ret = r('div', new r_routes['${route}']()); if(r_after)r_after(); return ret; }\n        ).`)\n      }\n      if (conds !== '') conds = conds.concat('else(\\'Error 404\\')')\n\n      var fn = `return r('div', ${conds})`\n\n      return radi.component({\n        name: 'radi-router',\n        view: new Function(fn),\n        state: {\n          // _radi_no_debug: true,\n          location: window.location.hash.substr(1),\n          active: null\n        },\n        actions: {\n          onMount() {\n            window.onhashchange = this.hashChange\n            this.hashChange()\n          },\n          hashChange() {\n            this.location = window.location.hash.substr(1)\n            var a = getRoute(this.location)\n            if (a) {\n              this.active = a.key\n            }\n            console.log('[radi-router] Route change', a)\n          }\n        }\n      })\n    };\n  };\n\n  exports.default = router;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","export const version = '0.1.1'\n\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg\nvar FIND_L = /\\bl\\(/g\nvar RL = '('.charCodeAt(0)\nvar RR = ')'.charCodeAt(0)\nvar HASH = '#'.charCodeAt(0)\nvar DOT = '.'.charCodeAt(0)\n\nvar TAGNAME = 0\nvar ID = 1\nvar CLASSNAME = 2\n\nvar frozenState = false\n\nfunction isArray (o) { return Array.isArray(o) === true }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\nfunction clone(obj) {\n\tvar i, ret, ret2;\n\tif (typeof obj === \"object\") {\n\t\tif (obj === null) return obj;\n\t\tif (Object.prototype.toString.call(obj) === \"[object Array]\") {\n\t\t\tvar len = obj.length;\n\t\t\tret = new Array(len);\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (typeof obj[i] === \"object\") {\n\t\t\t\t\tret[i] = clone(obj[i]);\n\t\t\t\t} else {\n\t\t\t\t\tret[i] = obj[i];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tret = {};\n\t\t\tfor (i in obj) {\n\t\t\t\tif (obj.hasOwnProperty(i)) {\n\t\t\t\t\tif (typeof(obj[i] === \"object\")) {\n\t\t\t\t\t\tret[i] = clone(obj[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret[i] = obj[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tret = obj;\n\t}\n\n\treturn ret;\n}\n\nfunction parseQuery(query) {\n\tvar tag = null;\n\tvar id = null;\n\tvar className = null;\n\tvar mode = TAGNAME;\n\tvar buffer = '';\n\n\tfor (var i = 0; i <= query.length; i++) {\n\t\tvar char = query.charCodeAt(i);\n\t\tvar isHash = char === HASH;\n\t\tvar isDot = char === DOT;\n\t\tvar isEnd = !char;\n\n\t\tif (isHash || isDot || isEnd) {\n\t\t\tif (mode === TAGNAME) {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\ttag = 'div';\n\t\t\t\t} else {\n\t\t\t\t\ttag = buffer;\n\t\t\t\t}\n\t\t\t} else if (mode === ID) {\n\t\t\t\tid = buffer;\n\t\t\t} else {\n\t\t\t\tif (className) {\n\t\t\t\t\tclassName += ' ' + buffer;\n\t\t\t\t} else {\n\t\t\t\t\tclassName = buffer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isHash) {\n\t\t\t\tmode = ID;\n\t\t\t} else if (isDot) {\n\t\t\t\tmode = CLASSNAME;\n\t\t\t}\n\n\t\t\tbuffer = '';\n\t\t} else {\n\t\t\tbuffer += query[i];\n\t\t}\n\t}\n\n\treturn { tag: tag, id: id, className: className };\n};\n\nfunction createElement(query, ns) {\n\tvar ref = parseQuery(query);\n\tvar tag = ref.tag;\n\tvar id = ref.id;\n\tvar className = ref.className;\n\tvar element = ns ? document.createElementNS(ns, tag) : document.createElement(tag);\n\n\tif (id) {\n\t\telement.id = id;\n\t}\n\n\tif (className) {\n\t\tif (ns) {\n\t\t\telement.setAttribute('class', className);\n\t\t} else {\n\t\t\telement.className = className;\n\t\t}\n\t}\n\n\treturn element;\n};\n\nvar arrayMods = function (v, s) {\n\tif (!isArray(v) || v.__radi) return false\n\t// if (v.__radi) return false\n\treturn Object.defineProperties(v, {\n\t\t__radi: { value: true },\n\t\treverse: { value: s.bind('reverse') },\n\t\tpush: { value: s.bind('push') },\n\t\tsplice: { value: s.bind('splice') },\n\t\tpop: { value: s.bind('pop') },\n\t\tshift: { value: s.bind('shift') }\n\t})\n}\n\nvar ids = 0;\nexport const activeComponents = [];\n\nfunction Radi(o) {\n\tvar SELF = {\n\t\t__path: 'this'\n\t}\n\n\tfunction populate(to, path) {\n\t\tvar ret\n\t\tif (typeof to !== 'object' || !to) return false;\n\t  ret = (typeof to.__path === 'undefined') ? Object.defineProperty(to, '__path', { value: path }) : false;\n\t  for (var ii in to) {\n\t    if (to.hasOwnProperty(ii) && !Object.getOwnPropertyDescriptor(to, ii).set) {\n\t      if (typeof to[ii] === 'object') populate(to[ii], path + '.' + ii)\n\t      // Initiate watcher if not already watched\n\t      watcher(to, ii, path.concat('.').concat(ii))\n\t      // Trigger changes for this path\n\t\t\t\tSELF.$e.emit(path + '.' + ii, to[ii])\n\t    }\n\t  }\n\t\treturn ret\n\t}\n\n\tObject.defineProperty(SELF, '$e', {\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tWATCH: {},\n\t\t\tget(path) {\n\t\t\t\treturn SELF.$e.WATCH[path] || (SELF.$e.WATCH[path] = [])\n\t\t\t},\n\t\t\ton(path, fn) {\n\t\t\t\tif (frozenState) return null\n\t\t\t\treturn SELF.$e.get(path).push(fn)\n\t\t\t},\n\t\t\temit(path, r) {\n\t\t\t\tif (frozenState) return null\n\t\t\t\tvar list = SELF.$e.get(path), len = list.length\n\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\tlist[i](path, r)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction watcher(targ, prop, path) {\n\t  var oldval = targ[prop],\n\t\t\tsetter = function (newval) {\n\t      if (oldval !== newval) {\n\t        if (Array.isArray(oldval)) {\n\t\t\t\t\t\tvar ret;\n\t          if (this && this.constructor === String) {\n\t\t\t\t\t\t\tret = Array.prototype[this].apply(oldval, arguments)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toldval = newval;\n\t\t\t\t\t\t\tarrayMods(oldval, setter);\n\t          }\n\n\t\t\t\t\t\tpopulate(oldval, path);\n\t\t\t\t\t\tSELF.$e.emit(path, oldval);\n\t\t\t\t\t\treturn ret;\n\t        } else if (typeof newval === 'object') {\n\t\t\t\t\t\toldval = clone(newval)\n\t\t\t\t\t\tpopulate(oldval, path);\n\t\t\t\t\t\tSELF.$e.emit(path, oldval);\n\t        } else {\n\t          oldval = newval\n\t\t\t\t\t\tpopulate(oldval, path);\n\t\t\t\t\t\tSELF.$e.emit(path, oldval);\n\t        }\n\t        return newval\n\t      } else {\n\t        return false\n\t      }\n\t    }\n\n\t  if (Array.isArray(oldval)) arrayMods(oldval, setter);\n\n\t  if (delete targ[prop]) {\n\t    Object.defineProperty(targ, prop, {\n\t      get: function () {\n\t        return oldval;\n\t      },\n\t      set: setter,\n\t      enumerable: true,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\n\tfor (var i in o.state) {\n\t\tif (typeof SELF[i] === 'undefined') {\n\t\t\tSELF[i] = o.state[i];\n\t\t} else {\n\t\t\tthrow new Error('[Radi.js] Err: Trying to write state for reserved variable `' + i + '`');\n\t\t}\n\t}\n\n\tfor (var i in o.props) {\n\t\tif (typeof SELF[i] === 'undefined') {\n\t\t\tif (isWatchable(o.props[i])) {\n\t\t\t\tSELF[i] = o.props[i].get();\n\n\t\t\t\tif (o.props[i].parent) {\n\t\t\t\t\to.props[i].parent().$e.on(o.props[i].path, (e, a) => {\n\t\t\t\t\t\tSELF[i] = a;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSELF[i] = o.props[i];\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('[Radi.js] Err: Trying to write prop for reserved variable `' + i + '`');\n\t\t}\n\t}\n\n\tpopulate(SELF, 'this');\n\n\tfor (var i in o.actions) {\n\t\tif (typeof SELF[i] === 'undefined') {\n\t\t\tSELF[i] = (function() {\n\t\t\t\tif (frozenState) return null\n\t\t\t\treturn o.actions[this].apply(SELF, arguments);\n\t\t\t}).bind(i);\n\t\t} else {\n\t\t\tthrow new Error('[Radi.js] Error: Trying to write action for reserved variable `' + i + '`');\n\t\t}\n\t}\n\n\tObject.defineProperties(SELF, {\n\t\t$id: {\n\t\t\tenumerable: false,\n\t\t\tvalue: ids++\n\t\t},\n\t\t$name: {\n\t\t\tenumerable: false,\n\t\t\tvalue: o.name\n\t\t},\n\t\t$state: {\n\t\t\tenumerable: false,\n\t\t\tvalue: o.state || {}\n\t\t},\n\t\t$props: {\n\t\t\tenumerable: false,\n\t\t\tvalue: o.props || {}\n\t\t},\n\t\t$actions: {\n\t\t\tenumerable: false,\n\t\t\tvalue: o.actions || {}\n\t\t},\n\t\t$html: {\n\t\t\tenumerable: false,\n\t\t\tvalue: document.createDocumentFragment()\n\t\t},\n\t\t$parent: {\n\t\t\tenumerable: false,\n\t\t\tvalue: null\n\t\t},\n\t\t$view: {\n\t\t\tenumerable: false,\n\t\t\tvalue: new Function('r','list','ll','cond','return ' + o.$view)(\n\t\t\t\tr.bind(SELF), list.bind(SELF), ll.bind(SELF), cond.bind(SELF)\n\t\t\t)\n\t\t},\n\t\t$render: {\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tSELF.mount()\n\t\t\t\treturn SELF.$html\n\t\t\t}\n\t\t},\n\t});\n\n\tObject.defineProperty(SELF, '$link', {\n\t\tenumerable: false,\n\t\tvalue: SELF.$view()\n\t})\n\n\tSELF.$html.appendChild(SELF.$link)\n\n\tSELF.$html.destroy = function () {\n\t\tconst oldRootElem = SELF.$link.parentElement;\n\t\tconst newRootElem = oldRootElem.cloneNode(false);\n\t\toldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);\n\t\tSELF.unmount();\n\t\toldRootElem.parentNode.removeChild(oldRootElem);\n\t}\n\n\tSELF.mount = function () {\n\t\tif (typeof SELF.$actions.onMount === 'function') {\n\t\t\tSELF.$actions.onMount.call(SELF)\n\t\t}\n\t\tactiveComponents.push(SELF);\n\t}\n\n\tSELF.unmount = function () {\n\t\tif (typeof SELF.$actions.onDestroy === 'function') {\n\t\t\tSELF.$actions.onDestroy.call(SELF)\n\t\t}\n\t\tfor (var i = 0; i < activeComponents.length; i++) {\n\t\t\tif (activeComponents[i].$id === SELF.$id) {\n\t\t\t\tactiveComponents.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn SELF.$link;\n\t}\n\n\tSELF.$link.unmount = SELF.unmount.bind(SELF)\n\tSELF.$link.mount = SELF.mount.bind(SELF)\n\n\treturn SELF\n}\n\nfunction unmountAll(el) {\n\tif (typeof el.unmount === 'function') el.unmount()\n\tif (el.children && el.children.length > 0) {\n\t\tfor (var i = 0; i < el.children.length; i++) {\n\t\t\tunmountAll(el.children[i])\n\t\t}\n\t}\n}\n\nfunction mountAll(el) {\n\tif (typeof el.mount === 'function') el.mount()\n\tif (el.children && el.children.length > 0) {\n\t\tfor (var i = 0; i < el.children.length; i++) {\n\t\t\tmountAll(el.children[i])\n\t\t}\n\t}\n}\n\nfunction radiMutate(c) {\n\tc();\n}\n\nfunction setStyle(view, arg1, arg2) {\n\tvar self = this;\n\tvar el = getEl(view);\n\n\tif (isWatchable(arg2)) {\n\t\tvar cache = arg2.get();\n\t\tel.style[arg1] = cache;\n\n\t\t// Update bind\n\t\t(function(cache, arg1, arg2){\n\t\t\tself.$e.on(arg2.path, function(e, v) {\n\t\t\t\tif (v === cache) return false\n\t\t\t\tradiMutate(() => {\n\t\t\t\t\tel.style[arg1] = v\n\t\t\t\t});\n\t\t\t\tcache = v;\n\t\t\t});\n\t\t})(cache, arg1, arg2);\n\t} else if (arg2 !== undefined) {\n\t\tel.style[arg1] = arg2;\n\t} else if (isString(arg1)) {\n\t\tel.setAttribute('style', arg1);\n\t} else {\n\t\tfor (var key in arg1) {\n\t\t\tsetStyle.call(this, el, key, arg1[key]);\n\t\t}\n\t}\n};\n\nfunction setAttr(view, arg1, arg2) {\n\tvar self = this;\n\tvar el = getEl(view);\n\n\tif (arg2 !== undefined) {\n\t\tif (arg1 === 'style') {\n\t\t\tsetStyle.call(this, el, arg2);\n\t\t} else if (arg1 === 'model' && isWatchable(arg2)) {\n\t\t\tvar cache = arg2.get()\n\t\t\tel.value = cache;\n\t\t\tel['oninput'] = function () { arg2.source[arg2.prop] = cache = el.value; self.$e.emit(arg2.path, el.value) };\n\t\t\t// Update bind\n\t\t\t(function(cache, arg1, arg2){\n\t\t\t\tself.$e.on(arg2.path, function(e, v) {\n\t\t\t\t\tif (v === cache) return false\n\t\t\t\t\tradiMutate(() => {\n\t\t\t\t\t\tel.value = v;\n\t\t\t\t\t});\n\t\t\t\t\tcache = v;\n\t\t\t\t});\n\t\t\t})(cache, arg1, arg2);\n\t\t} else if (isFunction(arg2)) {\n\t\t\tel[arg1] = function (e) { arg2.call(self, e); };\n\t\t} else if (isWatchable(arg2)) {\n\t\t\tvar temp = arg2.get()\n\t\t\tif (isFunction(temp)) {\n\t\t\t\tel[arg1] = function (e) { arg2.get().call(self, e); };\n\t\t\t} else {\n\t\t\t\tvar cache = arg2.get();\n\t\t\t\tlet z = el.setAttribute(arg1, cache);\n\n\t\t\t\t// Update bind\n\t\t\t\t(function(cache, arg1, arg2){\n\t\t\t\t\tself.$e.on(arg2.path, function(e, v) {\n\t\t\t\t\t\tif (v === cache) return false\n\t\t\t\t\t\tradiMutate(() => {\n\t\t\t\t\t\t\tel.setAttribute(arg1, v);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcache = v;\n\t\t\t\t\t});\n\t\t\t\t})(cache, arg1, arg2);\n\t\t\t}\n\t\t} else {\n\t\t\tel.setAttribute(arg1, arg2);\n\t\t}\n\t} else {\n\t\tfor (var key in arg1) {\n\t\t\tsetAttr.call(this, el, key, arg1[key]);\n\t\t}\n\t}\n};\n\nvar ensureEl = function (parent) { return isString(parent) ? html(parent) : getEl(parent); };\nvar getEl = function (parent) { return (parent.nodeType && parent) || (!parent.el && parent) || getEl(parent.el); };\n\nvar isString = function (a) { return typeof a === 'string'; };\nvar isNumber = function (a) { return typeof a === 'number'; };\nvar isFunction = function (a) { return typeof a === 'function'; };\n\nvar isNode = function (a) { return a && a.nodeType; };\nvar isWatchable = function (a) { return a && a instanceof NW; };\nvar isCondition = function (a) { return a && a instanceof Condition; };\nvar isComponent = function (a) { return a && a.__radi; };\n\nexport const text = function (str) { return document.createTextNode(str); };\n\nfunction radiArgs(element, args) {\n\tvar self = this\n\tfor (var i = 0; i < args.length; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (arg !== 0 && !arg) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// support middleware\n\t\tif (isComponent(arg)) {\n\t\t\telement.appendChild(arg.__radi().$render());\n\t\t} else if (isCondition(arg)) {\n\t\t\tvar arg2 = arg.__do(), a, id = arg2.id\n\t\t\tif (isComponent(arg2.r)) {\n\t\t\t\ta = arg2.r.__radi().$render();\n\t\t\t} else if (typeof arg2.r === 'function') {\n\t\t\t\ta = arg2.r();\n\t\t\t} else if (isString(arg2.r) || isNumber(arg2.r)) {\n\t\t\t\ta = text(arg2.r);\n\t\t\t} else {\n\t\t\t\ta = arg2.r;\n\t\t\t}\n\t\t\telement.appendChild(a);\n\t\t\t(function(arg){\n\t\t\t\targ.watch(function(v) {\n\t\t\t\t\tvar arg2 = arg.__do(), b\n\t\t\t\t\tif (id === arg2.id) return false\n\t\t\t\t\tif (isComponent(arg2.r)) {\n\t\t\t\t\t\tb = arg2.r.__radi().$render();\n\t\t\t\t\t} else if (typeof arg2.r === 'function') {\n\t\t\t\t\t\tb = arg2.r();\n\t\t\t\t\t} else if (isString(arg2.r) || isNumber(arg2.r)) {\n\t\t\t\t\t\tb = text(arg2.r);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = arg2.r;\n\t\t\t\t\t}\n\t\t\t\t\tunmountAll(a)\n\t\t\t\t\ta.parentNode.replaceChild(b, a)\n\t\t\t\t\ta = b\n\t\t\t\t\tmountAll(a)\n\t\t\t\t\tid = arg2.id\n\t\t\t\t})\n\t\t\t})(arg)\n\t\t} else if (typeof arg === 'function') {\n\t\t\targ.call(this, element);\n\t\t} else if (isString(arg) || isNumber(arg)) {\n\t\t\telement.appendChild(text(arg));\n\t\t} else if (isNode(getEl(arg))) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tradiArgs.call(this, element, arg);\n\t\t} else if (isWatchable(arg)) {\n\t\t\tvar cache = arg.get();\n\t\t\tlet z = text(cache);\n\t\t\telement.appendChild(z);\n\n\t\t\t// Update bind\n\t\t\t(function(cache, arg){\n\t\t\t\tself.$e.on(arg.path, function(e, v) {\n\t\t\t\t\tif (v === cache) return false\n\t\t\t\t\tradiMutate(() => {\n\t\t\t\t\t\tz.textContent = v;\n\t\t\t\t\t});\n\t\t\t\t\tcache = v;\n\t\t\t\t});\n\t\t\t})(cache, arg);\n\t\t} else if (typeof arg === 'object') {\n\t\t\tsetAttr.call(this, element, arg);\n\t\t}\n\n\t}\n}\n\nvar htmlCache = {};\n\nfunction memoizeHTML(query) { return htmlCache[query] || (htmlCache[query] = createElement(query)); };\n\nexport function r(query) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\tvar element;\n\n\tif (isString(query)) {\n\t\telement = memoizeHTML(query).cloneNode(false);\n\t} else if (isNode(query)) {\n\t\telement = query.cloneNode(false);\n\t} else {\n\t\telement = document.createDocumentFragment();\n\t}\n\n\tradiArgs.call(this, element, args);\n\n\treturn element;\n};\nr.extend = function (query) {\n\tvar args = [], len = arguments.length - 1;\n\twhile ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\tvar clone = memoizeHTML(query);\n\n\treturn r.bind.apply(r, [ this, clone ].concat( args ));\n};\n\nexport function component(o) {\n\tvar fn = o.view.toString().replace(STRIP_COMMENTS, ''),\n\t\tmatch = FIND_L.exec(fn),\n\t\tcursor = 0;\n\to.$view = '';\n\n\twhile (match !== null) {\n\t\tvar n = match.index,\n\t\t\tall = match.input,\n\t\t\t_l = 1,\n\t\t\t_r = 0\n\n\t\tconst len = all.length;\n\n\t\tfor (var i = n + 2; i < len; i++) {\n\t\t\tvar char = all.charCodeAt(i);\n\t\t\tif (char === RL) {\n\t\t\t\t_l += 1;\n\t\t\t} else\n\t\t\tif (char === RR) {\n\t\t\t\t_r += 1;\n\t\t\t}\n\t\t\tif (_l === _r) break;\n\t\t}\n\n\t\tvar found = all.substr(n, i + 1 - n);\n\n\t\tvar m = found.match(/[a-zA-Z_$]+(?:\\.\\w+(?:\\[.*\\])?)+/g) || [];\n\t\t// var obs = (m.length > 0) ? m.join('__ob__,') + '__ob__' : '';\n\t\tvar obs = []\n\t\tfor (var i = 0; i < m.length; i++) {\n\t\t\tvar temp = m[i].split('.')\n\t\t\tif (temp.length > 1) {\n\t\t\t\tvar last = temp.splice(-1)[0]\n\t\t\t\tobs.push('[' + temp.join('.') + ', \"' + last + '\"]')\n\t\t\t}\n\t\t}\n\t\tvar obs = obs.join(',');\n\t\tvar newString = 'll(function(){ return ' + found.substr(1) + '; },[' + obs + '], \"' + m.join(',') + '\")';\n\n\t\to.$view = o.$view.concat(fn.substr(cursor, n - cursor)).concat(newString);\n\t\tcursor = n + found.length;\n\n\t\tmatch = FIND_L.exec(fn);\n\t}\n\to.$view = o.$view.concat(fn.substr(cursor, fn.length - cursor));\n\n\treturn Component.bind(this, o);\n};\nfunction Component(o) {\n\tthis.o = {\n\t\tname: o.name,\n\t\tstate: clone(o.state),\n\t\tprops: clone(o.props),\n\t\tactions: o.actions,\n\t\tview: o.view,\n\t\t$view: o.$view,\n\t};\n\n\tthis.__radi = function() { return new Radi(this.o); };\n};\nComponent.prototype.props = function props(p) {\n\tfor (var k in p) {\n\t\tif (typeof this.o.props[k] === 'undefined') {\n\t\t\tconsole.warn('[Radi.js] Warn: Creating a prop `', k, '` that is not defined in component');\n\t\t}\n\t\tthis.o.props[k] = p[k];\n\t}\n\treturn this;\n};\n\nexport const mount = function (comp, id) {\n\tconst where = (id.constructor === String) ? document.getElementById(id) : id;\n\tvar out = (comp instanceof Component) ? comp.__radi().$render() : comp;\n\twhere.appendChild(out);\n\treturn out;\n}\n\nvar emptyNode = text('');\n\nexport const list = function (data, act) {\n\tif (!data) return '';\n\tvar SELF = this;\n\n\tvar link, fragment = document.createDocumentFragment(), toplink = emptyNode.cloneNode();\n\n\tfragment.appendChild(toplink);\n\n\tvar ret = [];\n\tvar cache = data.source[data.prop]\n\n\tif (isArray(cache)) {\n\t\tfor (var i = 0; i < cache.length; i++) {\n\t\t\tfragment.appendChild(\n\t\t\t\tact.call(SELF, cache[i], i)\n\t\t\t)\n\t\t}\n\t} else {\n\t\tvar i = 0\n\t\tfor (var key in cache) {\n\t\t\tfragment.appendChild(\n\t\t\t\tact.call(SELF, cache[key], key, i)\n\t\t\t)\n\t\t\ti++\n\t\t}\n\t}\n\n\tlink = fragment.lastChild;\n\n\tvar w = function(a, b) {\n\t\tif (a > 0) {\n\t\t\tvar len = b.length\n\t\t\tvar start = len - a\n\t\t\tfor (var i = start; i < len; i++) {\n\t\t\t\tfragment.appendChild(\n\t\t\t\t\tact.call(SELF, b[i], i)\n\t\t\t\t)\n\t\t\t}\n\t\t\tvar temp = fragment.lastChild\n\t\t\tlink.parentElement.insertBefore(fragment, link.nextSibling)\n\t\t\tlink = temp\n\t\t} else\n\t\tif (a < 0) {\n\t\t\tfor (var i = 0; i < Math.abs(a); i++) {\n\t\t\t\tvar templink = link.previousSibling\n\t\t\t\tlink.parentElement.removeChild(link)\n\t\t\t\tlink = templink\n\t\t\t}\n\t\t}\n\t}\n\n\tif (data.path) {\n\t\tvar len = cache.length\n\t\tSELF.$e.on(data.path, function(e, v) {\n\t\t\tw(v.length - len, v)\n\t\t\tlen = v.length\n\t\t})\n\t}\n\n\treturn fragment;\n}\n\n\nfunction NW(source, prop, parent) {\n  this.path = source.__path + '.' + prop;\n  this.get = () => (source[prop]);\n  this.source = source;\n  this.prop = prop;\n  this.parent = parent;\n}\n\nvar linkNum = 0;\n\nexport const link = function (fn, watch, txt) {\n\tvar args = {s: null,a: [],t: [],f: fn.toString()}, SELF = this;\n\n\tif (txt.length === 1 && fn.toString()\n\t\t\t\t.replace(/(function \\(\\)\\{ return |\\(|\\)|\\; \\})/g, '')\n\t\t\t\t.trim() === txt[0]) {\n\t\treturn new NW(watch[0][0], watch[0][1], function () { return SELF; })\n\t}\n\n\tvar len = watch.length\n\n\targs.s = fn.call(this);\n\targs.a = new Array(len);\n\targs.t = new Array(len);\n\targs.__path = '$link-' + linkNum;\n\tlinkNum += 1;\n\n\tfor (var i = 0; i < len; i++) {\n\t\targs.a[i] = watch[i][0][watch[i][1]];\n\t\targs.t[i] = '$rdi[' + i + ']';\n\t\targs.f = args.f.replace(txt[i], args.t[i]);\n\t\t// args.f = args.f.replace(new RegExp(txt[i], 'g'), args.t[i]);\n\t\t(function(path, args, p, i) {\n\t\t\tSELF.$e.on(path, (e, v) => {\n\t\t\t\targs.a[i] = v;\n\t\t\t\tvar cache = args.f.call(SELF, args.a)\n\n\t\t\t\tif (args.s !== cache) {\n\t\t\t\t\targs.s = cache;\n\t\t\t\t\tSELF.$e.emit(p, args.s);\n\t\t\t\t}\n\t\t\t});\n\t\t})(watch[i][0].__path + '.' + watch[i][1], args, args.__path + '.s', i)\n\t}\n\n\targs.f = new Function('$rdi', 'return ' + args.f + '();')\n\n\tif (len <= 0) return args.s;\n\treturn new NW(args, 's', function () { return SELF; });\n}\n\nexport const cond = function (a, e) {\n\treturn new Condition(a, e, this)\n}\nvar Condition = function Condition (a, e, SELF) {\n\tthis.cases = [{a:a,e:e}]\n\tthis.w = []\n\tthis.cache = []\n\tthis.els = emptyNode.cloneNode()\n\n\tif (isWatchable(a)) { this.w.push(a) }\n\n\tthis.watch = function(cb) {\n\t\tfor (var w in this.w) {\n\t\t\t(function(w) {\n\t\t\t\tSELF.$e.on(this.w[w].path, (e) => {\n\t\t\t\t\t// console.log(this.w[w].path, this.cache[w] == v, this.cache[w], v)\n\t\t\t\t\t// if (this.cache[w] == v) return false;\n\t\t\t\t\tcb(this.w[w].get())\n\t\t\t\t\t// this.cache[w] = v;\n\t\t\t\t})\n\t\t\t}).call(this,w)\n\t\t}\n\t}\n\n\tthis.__do = function() {\n\t\tvar ret = {id: null}\n\t\tfor (var c in this.cases) {\n\t\t\tvar a = isWatchable(this.cases[c].a) ? this.cases[c].a.get() : this.cases[c].a\n\t\t\tif (a) {\n\t\t\t\tret.id = c\n\t\t\t\tret.r = this.cases[c].e\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (typeof ret.r === 'undefined') ret.r = this.els\n\t\treturn ret\n\t}\n}\nCondition.prototype.elseif = function (a, e) {\n\tthis.cases.push({a:a,e:e})\n\tif (isWatchable(a)) { this.w.push(a) }\n\treturn this\n}\nCondition.prototype.cond = Condition.prototype.elseif\nCondition.prototype.else = function (e) {\n\tthis.els = e\n\treturn this\n}\n\nexport const l = function (f) {\n\treturn f\n}\n\nexport const ll = function (f, w, c) {\n\tif (!w) {\n\t\treturn f\n\t} else {\n\t\treturn link.call(this, f, w, c.split(','))\n\t}\n}\n\nexport const freeze = () => {\n\tfrozenState = true\n}\nexport const unfreeze = () => {\n\tfrozenState = false\n\n\tfor (var ii = 0; ii < activeComponents.length; ii++) {\n\t\tif (typeof activeComponents[ii].onMount === 'function') {\n\t\t\tactiveComponents[ii].onMount.call(activeComponents[ii])\n\t\t}\n\t}\n}\n\nconst pack = {\n\tactiveComponents: activeComponents,\n\tr: r,\n\tl: l,\n\tcond: cond,\n\tcomponent: component,\n\tmount: mount,\n\tfreeze: freeze,\n\tunfreeze: unfreeze,\n}\n\nwindow.$Radi = pack\n\nexport function use (plugin) {\n\treturn plugin(pack)\n}\n","/** @jsx r **/\nconst { r, l, component, cond } = require('../../../src/index.js');\n\nconst state = {\n  name: 'Marcis',\n  newname: 'John',\n}\n\nconst actions = {\n  onMount() {\n    // Do something\n  },\n  rename(name) {\n    this.name = name\n  },\n}\n\nconst view = function () {\n  var name = l(this.name);\n\n  return (\n    <div>\n      <h2>{ l(name) }</h2>\n      <label>\n        <strong>New name:</strong>\n        <input type=\"text\" model={ l(this.newname) }/>\n      </label>\n      <button onclick={ () => { this.rename(this.newname) } }>Change</button>\n    </div>\n  )\n}\n\nexport default component({\n  name: 'index',\n  view: view,\n  state: state,\n  actions: actions,\n})\n","/** @jsx r **/\nconst { r, l, component, cond } = require('../../../src/index.js');\n\nconst view = function () {\n  var name = l(this.name);\n\n  return (\n    <div>\n      <h4>This is FOO</h4>\n    </div>\n  )\n}\n\nexport default component({\n  name: 'foo',\n  view: view,\n})\n","import index from '../pages/index.js'\nimport foo from '../pages/foo.js'\n\nexport default () => ({\n  routes: {\n    '/': index,\n    '/foo': foo,\n  },\n  // beforeEach(from, to) {\n  //   console.log('beforeEach', arguments)\n  //   if (from === '/foo') {\n  //     return false\n  //   } else {\n  //     return true\n  //   }\n  // },\n  // afterEach(from, to) {\n  //   // After\n  // },\n})\n","/** @jsx r **/\nconst { r, l, component, mount, use } = require('../../src/index.js');\nimport router from '../../src/radi-router.js'\n\nconst _router = use(router)\n\nimport routes from './routes'\n\nwindow.Router = _router( routes() )\n\nconst view = function () {\n  return (\n    <div>\n      <a href=\"#/\">Index</a>\n      <br/>\n      <a href=\"#/foo\">Foo</a>\n      <br/>\n      <a href=\"#/error\">Error</a>\n      <br/>\n      <br/>\n      {new Router()}\n    </div>\n  )\n}\n\nconst main = component({\n  name: 'root',\n  view: view,\n})\n\nmodule.exports = main\n","const { mount, r } = require('../../src/index.js');\n\nimport main from './app';\n\nvar app = mount(new main(), 'app');\n\nif (module.hot) {\n  module.hot.accept();\n  module.hot.dispose(() => {\n    // Before restarting the app, we create a new root element and dispose the old one\n    app.destroy();\n  });\n}\n"]}