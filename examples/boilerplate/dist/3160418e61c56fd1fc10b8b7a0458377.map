{"version":3,"sources":["../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-loader.js","routes/index.js"],"names":["routes","beforeEach","from","to","console","log","arguments","afterEach"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBEAe;AAAA,SAAO;AACpBA,YAAQ;AACN,WAAK;AAAA,eAAM,0CAAO,mBAAP,EAAN;AAAA;AADC,KADY;AAIpBC,cAJoB,sBAITC,IAJS,EAIHC,EAJG,EAIC;AACnBC,cAAQC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B;AACA,UAAIJ,SAAS,MAAb,EAAqB;AACnB,eAAO,KAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KAXmB;AAYpBK,aAZoB,qBAYVL,IAZU,EAYJC,EAZI,EAYA;AAClB;AACD;AAdmffile":"3160418e61c56fd1fc10b8b7a0458377.map","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles)\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  var id = bundles[bundles.length - 1];\n\n  return Promise.all(bundles.slice(0, -1).map(loadBundle))\n    .then(function () {\n      return require(id);\n    });\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = bundle.match(/\\.(.+)$/)[1].toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.modules[id] = [function (require,module) {\n            module.exports = resolved;\n          }, {}];\n        }\n\n        return resolved;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  return this.promise || (this.promise = new Promise(this.executor).then(onSuccess, onError));\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  return this.promise || (this.promise = new Promise(this.executor).catch(onError));\n};\n","export default () => ({\n  routes: {\n    '/': () => import('../pages/index.js'),\n  },\n  beforeEach(from, to) {\n    console.log('beforeEach', arguments)\n    if (from === '/foo') {\n      return false\n    } else {\n      return true\n    }\n  },\n  afterEach(from, to) {\n    // After\n  },\n})\n"]}