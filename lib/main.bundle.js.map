{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/component/Component.js","webpack:///./src/component/index.js","webpack:///./src/component/utils/PrivateStore.js","webpack:///./src/component/utils/Renderer.js","webpack:///./src/consts/GLOBALS.js","webpack:///./src/index.js","webpack:///./src/listen/Listener.js","webpack:///./src/listen/index.js","webpack:///./src/mount.js","webpack:///./src/r/appendChild.js","webpack:///./src/r/appendChildren.js","webpack:///./src/r/index.js","webpack:///./src/r/setAttributes.js","webpack:///./src/r/setStyles.js","webpack:///./src/r/utils/AttributeListener.js","webpack:///./src/r/utils/ElementListener.js","webpack:///./src/r/utils/StyleListener.js","webpack:///./src/r/utils/appendListenerToElement.js","webpack:///./src/r/utils/ensureArray.js","webpack:///./src/r/utils/getElementFromQuery.js","webpack:///./src/r/utils/listenerToNode.js","webpack:///./src/r/utils/parseValue.js","webpack:///./src/r/utils/setStyle.js","webpack:///./src/r/utils/swapNode.js","webpack:///./src/utils/clone.js","webpack:///./src/utils/generateId.js","webpack:///./src/utils/remountActiveComponents.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;ACnEA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,6CAA6C;AAC1D,aAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,wFAAiC;AACjC,wFAAiC;AACjC,+BAA+B;AAC/B;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,oFAAoF,IAAI;AACxF;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,0DAA0D,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3LA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;;AAEA;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;;;;;;;;;;;;;;;AChCA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACZA;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACfA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;AC5DA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,IAAI;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA,kFAAiC,6BAA6B;AAC9D;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3CA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvEA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3CA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;;;;;;;;;;;ACbA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACTA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClBA;AAAA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,yDAAyD,MAAM;;AAE/D;;;;;;;;;;;;;;;;ACPA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AChBA;AAAA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,4CAA4C;;AAE5C;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-continue */\n// -- we need those for..in loops for now!\n\nimport GLOBALS from '../consts/GLOBALS';\nimport clone from '../utils/clone';\nimport generateId from '../utils/generateId';\nimport Renderer from './utils/Renderer';\nimport PrivateStore from './utils/PrivateStore';\n\nexport default class Component {\n  /**\n   * @param {object} o\n   * @param {string} [o.name]\n   * @param {object} [o.mixins]\n   * @param {object} [o.state]\n   * @param {object} [o.props]\n   * @param {object} [o.actions]\n   * @param {function(Component): (HTMLElement|Component)} view\n   * @param {Node[]|*[]} [children]\n   */\n  constructor(o, children) {\n    this.name = o.name;\n\n    this.addNonEnumerableProperties(Object.assign({\n      $id: generateId(),\n      $mixins: o.mixins || {},\n      $state: clone(o.state || {}),\n      $props: clone(o.props || {}),\n      $actions: o.actions || {},\n      // Variables like state and props are actually stored here so that we can\n      // have custom setters\n      $privateStore: new PrivateStore(),\n    }));\n\n    this.addCustomField('children', []);\n    if (children) this.setChildren(children);\n\n    this.copyObjToInstance(this.$mixins);\n    this.copyObjToInstance(this.$state);\n    this.copyObjToInstance(this.$props);\n    // Appends headless components\n    this.copyObjToInstance(GLOBALS.HEADLESS_COMPONENTS);\n    // The bind on this.handleAction is necessary\n    this.copyObjToInstance(this.$actions, this.handleAction.bind(this));\n\n    this.addNonEnumerableProperties({\n      $view: o.view ? o.view(this) : () => () => null,\n      $renderer: new Renderer(this),\n    });\n\n    this.$view.unmount = this.unmount.bind(this);\n    this.$view.mount = this.mount.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {object} obj\n   * @param {function(*): *} [handleItem=item => item]\n   */\n  copyObjToInstance(obj, handleItem = item => item) {\n    for (const key in obj) {\n      if (typeof this[key] !== 'undefined') {\n        throw new Error(`[Radi.js] Error: Trying to write for reserved variable \\`${key}\\``);\n      }\n      this.addCustomField(key, handleItem(obj[key]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {function(*): *} action\n   * @returns {function(...*): *}\n   */\n  handleAction(action) {\n    return (...args) => {\n      if (GLOBALS.FROZEN_STATE) return null;\n      return action.bind(this)(...args);\n    };\n  }\n\n  /**\n   * @param {object} props\n   * @returns {Component}\n   */\n  setProps(props) {\n    for (const key in props) {\n      this.$props[key] = props[key];\n      if (typeof this.$props[key] === 'undefined') {\n        console.warn(`[Radi.js] Warn: Creating a prop \\`${key}\\` that is not defined in component`);\n        this.addCustomField(key, props[key]);\n        continue;\n      }\n      this[key] = props[key];\n    }\n    return this;\n  }\n\n  /**\n   * @param {Node[]|*[]} children\n   */\n  setChildren(children) {\n    this.children = children;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {object} obj\n   */\n  addNonEnumerableProperties(obj) {\n    for (const key in obj) {\n      if (typeof this[key] !== 'undefined') continue;\n      Object.defineProperty(this, key, {\n        value: obj[key],\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   * @returns {*}\n   */\n  addCustomField(key, value) {\n    Object.defineProperty(this, key, {\n      get: () => this.$privateStore.getItem(key),\n      set: val => this.$privateStore.setItem(key, val),\n      enumerable: true,\n    });\n    this[key] = value;\n  }\n\n  /**\n   * @param {string} key\n   * @param {Listener} listener\n   */\n  addListener(key, listener) {\n    this.$privateStore.addListener(key, listener);\n  }\n\n  /**\n   * @param {string} key\n   * @returns {boolean}\n   */\n  isMixin(key) {\n    return typeof this.$mixins[key] !== 'undefined';\n  }\n\n  mount() {\n    if (typeof this.$actions.onMount === 'function') {\n      this.$actions.onMount(this);\n    }\n    GLOBALS.ACTIVE_COMPONENTS[this.$id] = this;\n  }\n\n  unmount() {\n    if (typeof this.$actions.onDestroy === 'function') {\n      this.$actions.onDestroy(this);\n    }\n    delete GLOBALS.ACTIVE_COMPONENTS[this.$id];\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  render() {\n    this.mount();\n    return this.$renderer.render();\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  destroy() {\n    this.unmount();\n    return this.$renderer.destroyHtml();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  static isComponent() {\n    return true;\n  }\n}\n","import Component from './Component';\n\n/**\n * @param {object} o\n * @returns {function}\n */\nconst component = o => class {\n  /**\n   * @returns {Component}\n   */\n  constructor(children) {\n    return new Component(o, children);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  static isComponent() {\n    return true;\n  }\n};\n\nexport default component;\n","export default class PrivateStore {\n  constructor() {\n    this.store = {};\n  }\n\n  /**\n   * setItem\n   * @param {string} key\n   * @param {*} value\n   * @returns {*}\n   */\n  setItem(key, value) {\n    if (typeof this.store[key] === 'undefined') {\n      this.createItemWrapper(key);\n    }\n    this.store[key].value = value;\n    this.triggerListeners(key);\n    return value;\n  }\n\n  /**\n   * getItem\n   * @param {string} key\n   * @returns {*}\n   */\n  getItem(key) {\n    return this.store[key].value;\n  }\n\n  /**\n   * addListener\n   * @param {string} key\n   * @param {Listener} listener\n   * @returns {Listener}\n   */\n  addListener(key, listener) {\n    if (typeof this.store[key] === 'undefined') {\n      this.createItemWrapper(key);\n    }\n    this.store[key].listeners.push(listener);\n    listener.handleUpdate(this.store[key].value);\n    return listener;\n  }\n\n  /**\n   * createItemWrapper\n   * @private\n   * @param {string} key\n   * @returns {object}\n   */\n  createItemWrapper(key) {\n    return this.store[key] = {\n      listeners: [],\n      value: null,\n    };\n  }\n\n  /**\n   * triggerListeners\n   * @private\n   * @param {string} key\n   */\n  triggerListeners(key) {\n    const item = this.store[key];\n    item.listeners.forEach(listener => listener.handleUpdate(item.value));\n  }\n}\n","export default class Renderer {\n  /**\n   * @param {Component} component\n   */\n  constructor(component) {\n    this.component = component;\n    this.html = document.createDocumentFragment();\n    this.node = {};\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  render() {\n    this.html.appendChild(this.node = this.component.$view);\n    this.html.destroy = this.node.destroy = () => this.component.destroy();\n    return this.html;\n  }\n\n  /**\n   * @returns {HTMLElement}\n   */\n  destroyHtml() {\n    if (this.node.childNodes) {\n      this.node.childNodes.forEach(childNode => {\n        this.node.removeChild(childNode);\n      });\n    }\n\n    if (this.html.childNodes) {\n      this.html.childNodes.forEach(childNode => {\n        this.html.removeChild(childNode);\n      });\n    }\n\n    this.html = document.createDocumentFragment();\n    this.node = {};\n\n    return this.node;\n  }\n}\n","const GLOBALS = {\n  MIX: {},\n  HEADLESS_COMPONENTS: {},\n  FROZEN_STATE: false,\n  VERSION: '0.1.8',\n  ACTIVE_COMPONENTS: {},\n  HTML_CACHE: {},\n};\n\nexport default GLOBALS;\n","import GLOBALS from './consts/GLOBALS';\nimport r from './r';\nimport listen from './listen';\nimport component from './component';\nimport mount from './mount';\nimport remountActiveComponents from './utils/remountActiveComponents';\n\nconst Radi = {\n  version: GLOBALS.VERSION,\n  activeComponents: GLOBALS.ACTIVE_COMPONENTS,\n  r,\n  listen,\n  l: listen,\n  component,\n  headless: (key, comp) => {\n    // TODO: Validate component and key\n    const mountedComponent = new comp();\n    mountedComponent.mount();\n    return GLOBALS.HEADLESS_COMPONENTS['$'.concat(key)] = mountedComponent;\n  },\n  mount,\n  freeze: () => {\n    GLOBALS.FROZEN_STATE = true;\n  },\n  unfreeze: () => {\n    GLOBALS.FROZEN_STATE = false;\n    remountActiveComponents();\n  },\n};\n\nif (window) window.$Radi = Radi;\n\nexport default Radi;\n","export default class Listener {\n  /**\n   * @param {Component} component\n   * @param {...string} path\n   */\n  constructor(component, ...path) {\n    this.component = component;\n    [this.key] = path;\n    this.childPath = path.slice(1, path.length);\n    this.value = null;\n    this.changeListeners = [];\n    this.processValue = value => value;\n\n    this.component.addListener(this.key, this);\n    this.handleUpdate(this.component[this.key]);\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleUpdate(value) {\n    this.value = this.processValue(this.getShallowValue(value), this.value);\n    this.changeListeners.forEach(changeListener => changeListener(this.value));\n  }\n\n  /**\n   * @param {function(*)} changeListener\n   */\n  onValueChange(changeListener) {\n    this.changeListeners.push(changeListener);\n    changeListener(this.value);\n  }\n\n  /**\n   * @param {function(*): *} processValue\n   * @returns {function(*): *}\n   */\n  process(processValue) {\n    this.processValue = processValue;\n    this.handleUpdate(this.value);\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {*} value\n   */\n  getShallowValue(value) {\n    if (!this.childPath) return value;\n    let shallowValue = value;\n    /*eslint-disable*/\n    for (const pathNestingLevel of this.childPath) {\n      shallowValue = shallowValue[pathNestingLevel];\n    }\n    return shallowValue;\n  }\n}\n","import Listener from './Listener';\n\n/**\n * The listen function is used for dynamically binding a component property\n * to the DOM. Also commonly imported as 'l'.\n * @param {Component} component\n * @param {...string} path\n * @returns {Listener}\n */\nconst listen = (component, ...path) =>\n  new Listener(component, ...path);\n\nexport default listen;\n","import Component from './component/Component';\n\n/**\n * @param {Component} component\n * @param {string} id\n * @returns {HTMLElement|Node}\n */\nconst mount = (component, id) => {\n  const container = typeof id === 'string' ? document.getElementById(id) : id;\n  const rendered =\n    component instanceof Component ? component.render() : component;\n  container.appendChild(rendered);\n  return rendered;\n};\n\nexport default mount;\n","/* eslint-disable no-param-reassign */\n\nimport Component from '../component/Component';\nimport Listener from '../listen/Listener';\nimport appendChildren from './appendChildren';\nimport appendListenerToElement from './utils/appendListenerToElement';\n\n/**\n * @param {HTMLElement} element\n * @returns {function(*)}\n */\nconst appendChild = element => child => {\n  if (!child && typeof child !== 'number') {\n    // Needs to render every child, even empty ones to preserve dom hierarchy\n    child = '';\n  }\n\n  if (child instanceof Component) {\n    element.appendChild(child.render());\n    return;\n  }\n\n  if (child instanceof Listener) {\n    appendListenerToElement(child, element);\n    return;\n  }\n\n  if (Array.isArray(child)) {\n    appendChildren(element, child);\n    return;\n  }\n\n  // Handles lazy loading components\n  if (typeof child === 'function') {\n    const placeholder = document.createElement('div');\n    const el = element.appendChild(placeholder);\n    child().then(local => {\n      if (typeof local.default === 'function'\n        && local.default.isComponent\n        && local.default.isComponent()) {\n        /*eslint-disable*/\n        appendChild(el)(new local.default());\n        /* eslint-enable */\n      } else {\n        appendChild(el)(local.default);\n      }\n    }).catch(() => {\n      // We don't have to do anything\n    });\n    return;\n  }\n\n  if (child instanceof Node) {\n    element.appendChild(child);\n    return;\n  }\n\n  element.appendChild(document.createTextNode(child));\n};\n\nexport default appendChild;\n","import appendChild from './appendChild';\n\n/**\n * @param {HTMLElement} element\n * @param {*[]} children\n */\nconst appendChildren = (element, children) => {\n  children.forEach(appendChild(element));\n};\n\nexport default appendChildren;\n","import setAttributes from './setAttributes';\nimport getElementFromQuery from './utils/getElementFromQuery';\nimport appendChildren from './appendChildren';\n\n/**\n * @param {*} query\n * @param {object} props\n * @param {...*} children\n * @returns {(HTMLElement|Component)}\n */\nconst r = (Query, props, ...children) => {\n  if (typeof Query.isComponent === 'function' && Query.isComponent()) {\n    return new Query(children).setProps(props || {});\n  }\n\n  if (typeof Query === 'function') {\n    const propsWithChildren = props || {};\n    propsWithChildren.children = children;\n    return Query(propsWithChildren);\n  }\n\n  const element = getElementFromQuery(Query);\n\n  if (props !== null) setAttributes(element, props);\n  appendChildren(element, children);\n\n  return element;\n};\n\nexport default r;\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-continue */\n// -- we need those for..in loops for now!\n\n/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport setStyles from './setStyles';\nimport Listener from '../listen/Listener';\nimport AttributeListener from './utils/AttributeListener';\n\n/**\n * @param {HTMLElement} element\n * @param {object} attributes\n */\nconst setAttributes = (element, attributes) => {\n  for (const key in attributes) {\n    const value = attributes[key];\n\n    if (typeof value === 'undefined') continue;\n\n    if (key === 'style') {\n      setStyles(element, value);\n      continue;\n    }\n\n    if (value instanceof Listener) {\n      new AttributeListener({\n        attributeKey: key,\n        listener: value,\n        element,\n      }).attach();\n      continue;\n    }\n\n    // Handles events 'on<event>'\n    if (key.substring(0, 2).toLowerCase() === 'on') {\n      element[key] = value;\n      continue;\n    }\n\n    element.setAttribute(key, value);\n  }\n};\n\nexport default setAttributes;\n","import Listener from '../listen/Listener';\n/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n// -- we need those for..in loops for now!\n\n/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport AttributeListener from './utils/AttributeListener';\nimport setStyle from './utils/setStyle';\n\n/**\n * @param {HTMLElement} element\n * @param {string|object|Listener} styles\n * @returns {CSSStyleDeclaration}\n */\nconst setStyles = (element, styles) => {\n  if (typeof styles === 'string') {\n    element.style = styles;\n  }\n\n  if (typeof styles !== 'object' || Array.isArray(styles)) {\n    return element.style;\n  }\n\n  if (styles instanceof Listener) {\n    new AttributeListener({\n      attributeKey: 'style',\n      listener: styles,\n      element,\n    }).attach();\n    return element.style;\n  }\n\n  for (const property in styles) {\n    setStyle(element, property, styles[property]);\n  }\n\n  return element.style;\n};\n\nexport default setStyles;\n","import setAttributes from '../setAttributes';\n\nexport default class AttributeListener {\n  /**\n   * @param {object} options\n   * @param {string} options.attributeKey\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ attributeKey, listener, element }) {\n    this.attributeKey = attributeKey;\n    this.listener = listener;\n    this.element = element;\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches attribute listener to given element and starts listening.\n   * @returns {AttributeListener}\n   */\n  attach() {\n    if (!this.element.attributeListeners) this.element.attributeListeners = [];\n    this.element.attributeListeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    setAttributes(this.element, { [this.attributeKey]: value });\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import listenerToNode from './listenerToNode';\n\nexport default class ElementListener {\n  /**\n   * @param {object} options\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ listener, element }) {\n    this.listener = listener;\n    this.element = element;\n    this.listenerAsNode = [];\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches listener to given element and starts listening.\n   * @returns {ElementListener}\n   */\n  attach() {\n    if (!this.element.listeners) this.element.listeners = [];\n    this.element.listeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    const newNode = listenerToNode(value);\n    /* eslint-disable */\n    for (const node of newNode) {\n      // If listenerAsNode[0] is undefined we're dealing with a fragment so we\n      // can just append\n      if (!this.listenerAsNode[0]) {\n        this.element.appendChild(node);\n        continue;\n      }\n      // TODO: Finish dom transformer and swap it with Node replacement\n      this.element.insertBefore(node, this.listenerAsNode[0]);\n    }\n\n    for (const node of this.listenerAsNode) {\n      var treeWalker = document.createTreeWalker(\n        node,\n        NodeFilter.SHOW_ELEMENT,\n        el => el && typeof el.destroy === 'function',\n        false);\n\n      var el;\n      while((el = treeWalker.nextNode())) {\n        el.destroy();\n      }\n\n      node.remove();\n    }\n\n    this.listenerAsNode = newNode;\n    /* eslint-enable */\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import setStyle from './setStyle';\n\nexport default class StyleListener {\n  /**\n   * @param {object} options\n   * @param {string} options.styleKey\n   * @param {Listener} options.listener\n   * @param {Node} options.element\n   */\n  constructor({ styleKey, listener, element }) {\n    this.styleKey = styleKey;\n    this.listener = listener;\n    this.element = element;\n    this.attached = false;\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  /**\n   * Attaches style listener to given element and starts listening.\n   * @returns {StyleListener}\n   */\n  attach() {\n    if (!this.element.styleListeners) this.element.styleListeners = [];\n    this.element.styleListeners.push(this);\n    this.listener.onValueChange(this.handleValueChange);\n    this.attached = true;\n    return this;\n  }\n\n  /**\n   * @param {*} value\n   */\n  handleValueChange(value) {\n    setStyle(this.element, this.styleKey, value);\n  }\n\n  /**\n   * @param {Node} newElement\n   */\n  updateElement(newElement) {\n    this.element = newElement;\n    return this.element;\n  }\n}\n","import ElementListener from './ElementListener';\n\n/**\n * @param {Listener} listener\n * @param {HTMLElement} element\n * @returns {ElementListener}\n */\nconst appendListenerToElement = (listener, element) =>\n  new ElementListener({\n    listener,\n    element,\n  }).attach();\n\nexport default appendListenerToElement;\n","/**\n * @param {*} value\n * @returns {*[]}\n */\nconst ensureArray = value => {\n  if (Array.isArray(value)) return value;\n  return [value];\n};\n\nexport default ensureArray;\n","/**\n * @param {*} query\n * @returns {Node}\n */\nconst getElementFromQuery = query => {\n  if (typeof query === 'string') return document.createElement(query);\n  console.warn(\n    '[Radi.js] Warn: Creating a JSX element whose query is not of type string, automatically converting query to string.'\n  );\n  return document.createElement(query.toString());\n};\n\nexport default getElementFromQuery;\n","import appendChildren from '../appendChildren';\nimport ensureArray from './ensureArray';\nimport swapNode from './swapNode';\n\n/**\n * @param {*} value - Value of the listener\n * @returns {Node[]}\n */\nconst listenerToNode = value => {\n  if (value instanceof DocumentFragment) {\n    return Array.from(value.childNodes).map(childNode => swapNode(childNode));\n  }\n\n  const element = document.createDocumentFragment();\n  appendChildren(element, ensureArray(value));\n  return listenerToNode(element);\n};\n\nexport default listenerToNode;\n","/**\n * @param {*} value\n * @return {*}\n */\nconst parseValue = value =>\n  typeof value === 'number' && !Number.isNaN(value) ? `${value}px` : value;\n\nexport default parseValue;\n","/* eslint-disable no-param-reassign */\n// -- until this can be rewritten as a pure function, we need to reassign.\n\nimport Listener from '../../listen/Listener';\nimport StyleListener from '../utils/StyleListener';\nimport parseValue from './parseValue';\n\n/**\n * @param {HTMLElement} element\n * @param {string} property\n * @param {string} value\n * @returns {*}\n */\nconst setStyle = (element, property, value) => {\n  if (typeof value === 'undefined') return undefined;\n\n  if (value instanceof Listener) {\n    new StyleListener({\n      styleKey: property,\n      listener: value,\n      element,\n    }).attach();\n    return element[property];\n  }\n\n  return element.style[property] = parseValue(value);\n};\n\nexport default setStyle;\n","/**\n * @param {*} oldNode - Node to be swapped\n * @returns {Node}\n */\nconst swapNode = oldNode => {\n\n  const newNode = oldNode;\n\n  oldNode = newNode.cloneNode(true);\n\n  // TODO: Need to destroy all childs of oldNode with smth like .destroy();\n  oldNode.remove();\n\n  return newNode;\n};\n\nexport default swapNode;\n","/**\n * @param {*} obj\n * @returns {*}\n */\nconst clone = obj => {\n  if (typeof obj !== 'object') return obj;\n  if (obj === null) return obj;\n  if (Array.isArray(obj)) return obj.map(clone);\n\n  /*eslint-disable*/\n  const cloned = {};\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      cloned[key] = clone(obj[key]);\n    }\n  }\n  /* eslint-enable */\n\n  return cloned;\n};\n\nexport default clone;\n","/**\n * UUID v4 generator\n * https://gist.github.com/jcxplorer/823878\n * @returns {string}\n */\nconst generateId = () => {\n  let uuid = '';\n  for (let i = 0; i < 32; i++) {\n    const random = (Math.random() * 16) | 0; // eslint-disable-line\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      uuid += '-';\n    }\n    uuid += (i === 12 ? 4 : i === 16 ? (random & 3) | 8 : random).toString(16); // eslint-disable-line\n  }\n  return uuid;\n};\n\nexport default generateId;\n","import GLOBALS from '../consts/GLOBALS';\n\nconst remountActiveComponents = () => {\n  Object.values(GLOBALS.ACTIVE_COMPONENTS).forEach(component => {\n    if (typeof component.onMount === 'function') {\n      component.onMount(component);\n    }\n  });\n};\n\nexport default remountActiveComponents;\n"],"sourceRoot":""}